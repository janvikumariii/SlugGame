name: Build APK

on:
  workflow_dispatch:
    inputs:
      api_link:
        description: 'API Link'
        required: true

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Call API and Store Response
        id: api_call
        run: |
          # Make the API call and store the response in a file
          API_RESPONSE=$(curl -s -X GET ${{ github.event.inputs.api_link }})
          echo $API_RESPONSE > api_response.json
        shell: bash

      - name: Modify Package Name
        run: |
          PACKAGE_NAME=$(jq -r '.data.property.name' api_response.json)
          PACKAGE_NAME=${PACKAGE_NAME//[- ]/_}
          PACKAGE_NAME=$(echo "$PACKAGE_NAME" | tr '[:upper:]' '[:lower:]')
          FIRST_CHAR=$(echo "${PACKAGE_NAME:0:1}")
          if [[ ! "$FIRST_CHAR" =~ [a-z_] ]]; then
            PACKAGE_NAME="_$PACKAGE_NAME"
          fi
          sed -i '' "s#package=\"com.example.simpleviralgames\"#package=\"com.simpleviralgames.$PACKAGE_NAME\"#" app/src/main/AndroidManifest.xml
          sed -i '' "s#applicationId \"com.example.simpleviralgames\"#applicationId \"com.simpleviralgames.$PACKAGE_NAME\"#" app/build.gradle

      - name: Add untracked files
        run: git add .

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -a -m "Updated API Link"
          git push

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7

      - name: Get Artifact URL
        id: get_artifact_url
        run: |
          echo "::set-output name=url::$(curl --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --url 'https://api.github.com/repos/janvikumariii/SlugGame/actions/artifacts' \
          --silent | jq -r '.artifacts[] | select(.name == "api_response") | .archive_download_url')"
        shell: bash

      - name: Download Artifact
        run: |
          DOWNLOAD_URL=$(echo "${{ steps.get_artifact_url.outputs.url }}")
          curl -sL -o api_response.json "$DOWNLOAD_URL"
