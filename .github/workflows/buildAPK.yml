name: Build APK

on:
  workflow_dispatch:
    inputs:
      api_link:
        description: 'API Link'
        required: true

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Call API and Store Response
        id: api_call
        run: |
          # Make the API call and store the response in a file
          API_RESPONSE=$(curl -s -X GET ${{ github.event.inputs.api_link }})
          echo $API_RESPONSE > api_response.json
        shell: bash
        
        
      - name: Extract Image and URL from API Response
        id: extract_data
        run: |
          IMAGE=$(jq -r '.data.property.image' api_response.json)
          URL=$(jq -r '.data.url' api_response.json)
          PACKAGE_NAME=$(jq -r '.data.property.name' api_response.json)
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "URL=$URL" >> $GITHUB_ENV
          PACKAGE_NAME=$(echo "$PACKAGE_NAME" | tr '[:upper:]' '[:lower:]')
          FIRST_CHAR=${PACKAGE_NAME:0:1}
          if ! [[ "$FIRST_CHAR" =~ [a-z_] ]]; then
            PACKAGE_NAME="_$PACKAGE_NAME"
          fi
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          APP_NAME=$(jq -r '.data.property.name' api_response.json)
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
      
      - name: Add untracked files
        run: git add .

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -a -m "Updated API Link"
          git push

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7
